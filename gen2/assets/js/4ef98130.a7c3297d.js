"use strict";(globalThis.webpackChunkwebsite=globalThis.webpackChunkwebsite||[]).push([[469],{44936:t=>{t.exports=JSON.parse('{"version":{"pluginId":"research-tools","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"researchToolsSidebar":[{"type":"link","href":"/projectaria_tools/gen2/research-tools/","label":"Open Science Initiative (OSI)","docId":"osi","unlisted":false},{"type":"category","label":"Project Aria Tools","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/projectaria_tools/gen2/research-tools/projectariatools/start","label":"Get Started","docId":"projectariatools/start","unlisted":false},{"type":"category","label":"Tools","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/projectaria_tools/gen2/research-tools/projectariatools/tools/pythonviz","label":"Visualization Tools (Python)","docId":"projectariatools/tools/pythonviz","unlisted":false},{"type":"link","href":"/projectaria_tools/gen2/research-tools/projectariatools/tools/cppviz","label":"Visualization Tools (C++)","docId":"projectariatools/tools/cppviz","unlisted":false},{"type":"link","href":"/projectaria_tools/gen2/research-tools/projectariatools/tools/vrstomp4","label":"VRS to MP4 Converter","docId":"projectariatools/tools/vrstomp4","unlisted":false},{"type":"link","href":"/projectaria_tools/gen2/research-tools/projectariatools/tools/exportcsv","label":"Export Gen2 On-device Machine Perception data to CSV","docId":"projectariatools/tools/exportcsv","unlisted":false}]},{"type":"category","label":"Python Notebook Tutorials","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/projectaria_tools/gen2/research-tools/projectariatools/pythontutorials/dataprovider","label":"VrsDataProvider Basics","docId":"projectariatools/pythontutorials/dataprovider","unlisted":false},{"type":"link","href":"/projectaria_tools/gen2/research-tools/projectariatools/pythontutorials/calibration","label":"Using Device Calibration Data from VRS","docId":"projectariatools/pythontutorials/calibration","unlisted":false},{"type":"link","href":"/projectaria_tools/gen2/research-tools/projectariatools/pythontutorials/queue","label":"Access Multi-Sensor Data Sequentially","docId":"projectariatools/pythontutorials/queue","unlisted":false},{"type":"link","href":"/projectaria_tools/gen2/research-tools/projectariatools/pythontutorials/eyetracking-handtracking","label":"Using On-Device Eye-tracking and Hand-tracking","docId":"projectariatools/pythontutorials/eyetracking-handtracking","unlisted":false},{"type":"link","href":"/projectaria_tools/gen2/research-tools/projectariatools/pythontutorials/vio","label":"Using On-Device VIO Data","docId":"projectariatools/pythontutorials/vio","unlisted":false},{"type":"link","href":"/projectaria_tools/gen2/research-tools/projectariatools/pythontutorials/time-sync","label":"Timestamp Alignment in Aria Gen2","docId":"projectariatools/pythontutorials/time-sync","unlisted":false},{"type":"link","href":"/projectaria_tools/gen2/research-tools/projectariatools/pythontutorials/mps","label":"Loading and Visualizing MPS Output Data","docId":"projectariatools/pythontutorials/mps","unlisted":false}]},{"type":"link","href":"/projectaria_tools/gen2/research-tools/projectariatools/advanced-installation","label":"Advanced Installation From Source Code","docId":"projectariatools/advanced-installation","unlisted":false},{"type":"link","href":"/projectaria_tools/gen2/research-tools/projectariatools/advanced-installation-pixi","label":"Advanced Installation In Pixi","docId":"projectariatools/advanced-installation-pixi","unlisted":false}]},{"type":"category","label":"Datasets","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Pilot Dataset","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/projectaria_tools/gen2/research-tools/dataset/pilot/content","label":"Content","docId":"dataset/pilot/content","unlisted":false},{"type":"link","href":"/projectaria_tools/gen2/research-tools/dataset/pilot/format","label":"Format","docId":"dataset/pilot/format","unlisted":false},{"type":"link","href":"/projectaria_tools/gen2/research-tools/dataset/pilot/download","label":"Download","docId":"dataset/pilot/download","unlisted":false},{"type":"link","href":"/projectaria_tools/gen2/research-tools/dataset/pilot/loader-viz","label":"Loading and Visualizing","docId":"dataset/pilot/loader-viz","unlisted":false}]}]}]},"docs":{"dataset/pilot/content":{"id":"dataset/pilot/content","title":"Content","description":"The Aria Gen 2 Pilot Dataset is a multi-participant, egocentric dataset collected using Aria Gen 2 glasses with four participants (a primary wearer and three co-participants) simultaneously recording a variety of daily activities, resulting in rich, time-synchronized multimodal data. The dataset is structured to demonstrate the Gen 2 device capability and potential applications in computer vision, multimodal learning, robotics, and contextual AI.","sidebar":"researchToolsSidebar"},"dataset/pilot/download":{"id":"dataset/pilot/download","title":"Download","description":"install and download","sidebar":"researchToolsSidebar"},"dataset/pilot/format":{"id":"dataset/pilot/format","title":"Format","description":"The dataset contains 12 sequences in total. Each Aria glasses recording is stored as its own sequence with all data related to that recording self contained within that sequence folder. An example sequence folder would look like this:","sidebar":"researchToolsSidebar"},"dataset/pilot/loader-viz":{"id":"dataset/pilot/loader-viz","title":"Loading and Visualizing","description":"Tutorial of loading and visualizing .","sidebar":"researchToolsSidebar"},"osi":{"id":"osi","title":"Open Science Initiative (OSI)","description":"","sidebar":"researchToolsSidebar"},"projectariatools/advanced-installation":{"id":"projectariatools/advanced-installation","title":"Advanced Installation From Source Code","description":"This page covers advanced installation options to build Project Aria Tools from source code, including:","sidebar":"researchToolsSidebar"},"projectariatools/advanced-installation-pixi":{"id":"projectariatools/advanced-installation-pixi","title":"Advanced Installation In Pixi","description":"You can build projectaria_tools in isolation using pixi on and for your local platform (Linux, macOS Intel/Silicon) using the exact same command lines.","sidebar":"researchToolsSidebar"},"projectariatools/pythontutorials/calibration":{"id":"projectariatools/pythontutorials/calibration","title":"Using Device Calibration Data from VRS","description":"<TutorialButtons","sidebar":"researchToolsSidebar"},"projectariatools/pythontutorials/dataprovider":{"id":"projectariatools/pythontutorials/dataprovider","title":"VrsDataProvider Basics","description":"<TutorialButtons","sidebar":"researchToolsSidebar"},"projectariatools/pythontutorials/eyetracking-handtracking":{"id":"projectariatools/pythontutorials/eyetracking-handtracking","title":"Using On-Device Eye-tracking and Hand-tracking","description":"<TutorialButtons","sidebar":"researchToolsSidebar"},"projectariatools/pythontutorials/mps":{"id":"projectariatools/pythontutorials/mps","title":"Loading and Visualizing MPS Output Data","description":"<TutorialButtons","sidebar":"researchToolsSidebar"},"projectariatools/pythontutorials/queue":{"id":"projectariatools/pythontutorials/queue","title":"Access Multi-Sensor Data Sequentially","description":"<TutorialButtons","sidebar":"researchToolsSidebar"},"projectariatools/pythontutorials/time-sync":{"id":"projectariatools/pythontutorials/time-sync","title":"Timestamp Alignment in Aria Gen2","description":"<TutorialButtons","sidebar":"researchToolsSidebar"},"projectariatools/pythontutorials/vio":{"id":"projectariatools/pythontutorials/vio","title":"Using On-Device VIO Data","description":"<TutorialButtons","sidebar":"researchToolsSidebar"},"projectariatools/start":{"id":"projectariatools/start","title":"Get Started","description":"This page provides basic information about how to install the Project Aria Tools library as a Python package using pip.","sidebar":"researchToolsSidebar"},"projectariatools/tools/cppviz":{"id":"projectariatools/tools/cppviz","title":"Visualization Tools (C++)","description":"This page covers the C++ visualization tools available in Project Aria Tools. These tools provide native performance visualization of Aria data using the Pangolin framework.","sidebar":"researchToolsSidebar"},"projectariatools/tools/exportcsv":{"id":"projectariatools/tools/exportcsv","title":"Export Gen2 On-device Machine Perception data to CSV","description":"This page covers the Gen2 Machine Perception (MP) CSV exporter tool, rungen2mpcsvexporter, which extracts on-device machine perception data from Gen2 Aria VRS files and exports them to CSV files compatible with the MPS (Machine Perception Service) data format.","sidebar":"researchToolsSidebar"},"projectariatools/tools/pythonviz":{"id":"projectariatools/tools/pythonviz","title":"Visualization Tools (Python)","description":"This page covers the Python-based visualization tools available in Project Aria Tools. These tools provide powerful ways to visualize and analyze Aria data using the Rerun visualization framework.","sidebar":"researchToolsSidebar"},"projectariatools/tools/vrstomp4":{"id":"projectariatools/tools/vrstomp4","title":"VRS to MP4 Converter","description":"The vrstomp4 tool converts Aria VRS (Video Recording and Sensor) files to standard MP4 video format. This tool extracts camera streams and audio data from VRS files and creates MP4 videos that can be played by standard video players.","sidebar":"researchToolsSidebar"}}}}')}}]);
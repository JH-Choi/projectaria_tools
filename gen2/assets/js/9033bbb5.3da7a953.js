"use strict";(globalThis.webpackChunkwebsite=globalThis.webpackChunkwebsite||[]).push([[8921],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var s=t(96540);const r={},i=s.createContext(r);function a(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:n},e.children)}},84691:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"client-sdk/python-sdk/text-to-speech-example","title":"Example - Text-to-speech","description":"Using aria.sdk_gen2 to Render Text-to-Speech (TTS) on an Aria Gen2 device.","source":"@site/docs-ark/client-sdk/python-sdk/text-to-speech-example.mdx","sourceDirName":"client-sdk/python-sdk","slug":"/client-sdk/python-sdk/text-to-speech-example","permalink":"/projectaria_tools/gen2/ark/client-sdk/python-sdk/text-to-speech-example","draft":false,"unlisted":false,"editUrl":"https://www.internalfb.com/code/fbsource/arvr/projects/ariane/aria_research_kit/projectaria_tools/website/docs-ark/client-sdk/python-sdk/text-to-speech-example.mdx","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5,"title":"Example - Text-to-speech"},"sidebar":"arkSidebar","previous":{"title":"Example - Streaming","permalink":"/projectaria_tools/gen2/ark/client-sdk/python-sdk/streaming-example"},"next":{"title":"Build a ROS Example","permalink":"/projectaria_tools/gen2/ark/client-sdk/ros"}}');var r=t(74848),i=t(28453);const a={sidebar_position:5,title:"Example - Text-to-speech"},c=void 0,o={},l=[{value:"Run TTS example",id:"run-tts-example",level:2},{value:"Step-by-step walk through",id:"step-by-step-walk-through",level:2}];function d(e){const n={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Using aria.sdk_gen2 to Render Text-to-Speech (TTS) on an Aria Gen2 device."}),"\n",(0,r.jsx)(n.h2,{id:"run-tts-example",children:"Run TTS example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"python ~/Downloads/projectaria_client_sdk_samples_gen2/device_tts.py --text `hello world, my name is Aria Gen 2`\n"})}),"\n",(0,r.jsx)(n.h2,{id:"step-by-step-walk-through",children:"Step-by-step walk through"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Import Required Modules"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Start by importing the necessary modules:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"import argparse\nimport aria.sdk_gen2 as sdk_gen2\n"})}),"\n",(0,r.jsx)(n.p,{children:"aria.sdk_gen2 is the SDK for interacting with Aria devices."}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:"Parse Command-Line Arguments"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Set up argument parsing to allow the user to specify the TTS text:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'def parse_args() -> argparse.Namespace:\n   parser = argparse.ArgumentParser()\n   parser.add_argument(\n       "--text",\n       dest="text",\n       type=str,\n       default="",\n       required=True,\n       help="TTS text to rendered by the device.",\n   )\n   return parser.parse_args()\n'})}),"\n",(0,r.jsx)(n.p,{children:"The --text argument lets the user specify the text to be rendered as speech by the device.\nThis argument is required."}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsx)(n.li,{children:"Set Up the Device Client and Configuration"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Create and configure the device client:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"device_client = sdk_gen2.DeviceClient()\nconfig = sdk_gen2.DeviceClientConfig()\ndevice_client.set_client_config(config)\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"DeviceClient manages the authentication and device connection."}),"\n",(0,r.jsx)(n.li,{children:"DeviceClientConfig is used to specify the target device by serial number or IP address."}),"\n"]}),"\n",(0,r.jsxs)(n.ol,{start:"4",children:["\n",(0,r.jsx)(n.li,{children:"Connect to the Device"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Attempt to connect to the device:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'device = device_client.connect()\nprint(f"Connected to device: {device.connection_id()}")\n'})}),"\n",(0,r.jsx)(n.p,{children:"If successful, you\u2019ll see a confirmation message with the device connection ID."}),"\n",(0,r.jsxs)(n.ol,{start:"5",children:["\n",(0,r.jsx)(n.li,{children:"Render Text-to-Speech (TTS)"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Send the TTS command to the device:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'print(f"Rendering TTS: {args.text}")\ndevice.render_tts(text=args.text)\n'})}),"\n",(0,r.jsx)(n.p,{children:"The device will render the specified text as speech."})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);